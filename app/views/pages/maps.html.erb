
<%= stylesheet_link_tag params[:controller] %>

<% content_for :head do %>
  <!-- header content specific to this payment page -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj" crossorigin="anonymous"></script>
  <script src="https://unpkg.com/intro.js/minified/intro.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link rel="stylesheet" href="https://unpkg.com/intro.js/minified/introjs.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous">
  <link  rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css" />
  <script src="https://unpkg.com/@google/markerclustererplus@4.0.1/dist/markerclustererplus.min.js"></script>
<% end %>


<div class="mobile-wrap">

  <div class="modal fade" id="modalReport" tabindex="-1" aria-labelledby="modalReportLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="modalReportLabel">Ocorrência</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form>
            <div class="form-group float-label-control">
              <label for=""><i>Descrição</i></label>
              <input class='form-control' type="text" id='descriptionForm' name="description" value="" placeholder="Descrição" required>
            </div>
            <div>
              <label for="selectCategoria"><i>Categoria</i></label>
              <select class='form-control' id='selectCategoria' name='category'>
                <option value='Assalto com arma de fogo'>Assalto com arma de fogo</option>
                <option value='Briga no Trânsito'>Briga no Trânsito</option>
                <option value='Utilização de Drogas em via Pública'>Utilização de Drogas em via Pública</option>
                <option value='Tráfico de Drogas'>Tráfico de Drogas</option>
                <option value='Briga na rua'>Briga na rua</option>
                <option value='Acidente de Trânsito'>Acidente de Trânsito</option>
                <option value='Briga Doméstica na rua'>Briga Doméstica na rua</option>
                <option value='Furto'>Furto</option>
              </select>
            </div>
            <label for=""><i>Level</i></label><br />
            <div class="form-check form-check-inline">
              <input class="form-check-input" type="radio" name="danger_level_input" id="inlineRadio1" value="1" required>
              <label class="form-check-label" for="inlineRadio1">1</label>
            </div>
            <div class="form-check form-check-inline">
              <input class="form-check-input" type="radio" name="danger_level_input" id="inlineRadio2" value="2" required>
              <label class="form-check-label" for="inlineRadio2">2</label>
            </div>
            <div class="form-check form-check-inline">
              <input class="form-check-input" type="radio" name="danger_level_input" id="inlineRadio3" value="3" required>
              <label class="form-check-label" for="inlineRadio3">3</label>
            </div>
            <div class="form-check form-check-inline">
              <input class="form-check-input" type="radio" name="danger_level_input" id="inlineRadio4" value="4" required>
              <label class="form-check-label" for="inlineRadio4">4</label>
            </div>
            <div class="form-check form-check-inline">
              <input class="form-check-input" type="radio" name="danger_level_input" id="inlineRadio5" value="5" required>
              <label class="form-check-label" for="inlineRadio5">5</label>
            </div>
            <div class="form-group float-label-control">
              <label for=""><i>Endereço</i></label>
              <textarea class='form-control autoresizing' data-autoresize name="address" id='place_address' onchange="this.parentNode.dataset.replicatedValue = this.value"></textarea>
            </div>

            <input type='hidden' class='form-control' id='place_latitude' readonly="readonly" />
            <input type='hidden' class='form-control' id='place_longitude' readonly="readonly" />

            <button type="button" onclick="sendForm()" class='btn btn-success' name="button"><i class='fa fa-plus-square'></i> Registrar</button>
          </form>

        </div>
      </div>
    </div>
  </div>
  <div class="modal fade" id="modalReviews" tabindex="-1" aria-labelledby="modalReviewsLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="modalReviewsLabel">Detalhes</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <label>Descrição:</label>
          <p id='description'></p>
          <label>Categoria:</label>
          <p id='category'></p>
          <label>Nível:</label>
          <p id='danger_level'></p>
          <label>Endereço:</label>
          <p id='address'></p>
          <label>Latitude:</label>
          <p id='recordLat'></p>
          <label>Longitude:</label>
          <p id='recordLong'></p>
          <label>User:</label>
          <p id='userName'></p>
        </div>

      </div>
    </div>
  </div>



  <div class="modal fade" id="modalSettings" role="dialog" tabindex="-1" aria-labelledby="modalSettings" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="modalSettingsLabel">Settings</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="col-md-4">
            <label for="">Filtros:</label>
            <fieldset class='pinFilters levelCheckboxes'>
              <br />
              <div class="checkbox checkbox-primary">
                <input id="checkbox1" type="checkbox" name="checkboxPinLevel" checked="" value='1'>
                <label for="checkbox1">
                  <img src='/imgs/pinLevel1_sm.png' width=20%" /> Level 1
                </label>
              </div>
              <div class="checkbox checkbox-primary">
                <input id="checkbox2" type="checkbox" name="checkboxPinLevel" checked="" value='2'>
                <label for="checkbox2">
                  <img src='/imgs/pinLevel2_sm.png' width=20%" /> Level 2
                </label>
              </div>
              <div class="checkbox checkbox-primary">
                <input id="checkbox3" type="checkbox" name="checkboxPinLevel" checked="" value='3'>
                <label for="checkbox3">
                  <img src='/imgs/pinLevel3_sm.png' width="20%" /> Level 3
                </label>
              </div>
              <div class="checkbox checkbox-primary">
                <input id="checkbox4" type="checkbox" name="checkboxPinLevel" checked="" value='4'>
                <label for="checkbox4">
                  <img src='/imgs/pinLevel4_sm.png' width=20%" /> Level 4
                </label>
              </div>
              <div class="checkbox checkbox-primary">
                <input id="checkbox5" type="checkbox" name="checkboxPinLevel" checked="" value='5'>
                <label for="checkbox5">
                  <img src='/imgs/pinLevel5_sm.png' width=20%" /> Level 5
                </label>
              </div>


            </fieldset>
          </div>

        </div>

      </div>
    </div>
  </div>
  <div class="modal fade" id="modalCredits" tabindex="-1" aria-labelledby="modalCreditsLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="modalCreditsLabel"><i class='fa fa-info'></i> Sobre</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          ...
        </div>

      </div>
    </div>
  </div>

  <div class="mobile clearfix">
    <div class="header">
      <span class="ion-ios-navicon pull-left"><i></i></span>
      <div class='pull-right'>
        <input type="checkbox" class="checkboxDarkMode" id="checkbox" onclick="toggleDarkMode()">
        <label for="checkbox" class="labelDarkToggle">
          <i class="fas fa-moon"></i>
          <i class='fas fa-sun'></i>
          <div class='ballDarkToggle'></div>
        </label>
      </div>


    </div>
    <div class="sidebar" id="sidebar">
      <div class="sidebar-overlay"></div>
      <div class="sidebar-content">
        <div class="top-head">
          <div class="">
            <h1 style="margin-bottom: -2%;">SAFETY</h1>
            <p style='text-align:center'>for all.</p>
          </div>
        </div>
        <div class="navs-left">

          <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modalSettings" onclick="openModalSettings()"><span class="ion-ios-gear-outline"></span> Settings</button><br />
          <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modalCredits" onclick="openModalCredits()"><span class="ion-ios-information-outline"></span> About</button><br />
          <button type="button" class="btn btn-primary" onclick="initTutorial()"><span class="fas fa-user-graduate"></span> Tutorial</button><br />
          <!-- <button type="button" class="btn btn-primary" onclick="logOutUser()"><span class="ion-ios-person-outline"></span> Logout</button> -->
          <%= button_to "Logout", destroy_user_session_path,method: :delete,class:"btn btn-primary" %>

        </div>

        <div>
        </div>
      </div>
    </div>
    <div id="allMap"></div>
    <div class="content">
      <!-- MAPA -->
    </div>
    <div class="nav3">
      <a href="#" class="mask" id='toggleHeatmapButton' onclick='toggleHeatmap()' style="color: #fff;"><i class="fas fa-fire-alt"></i></a>
    </div>
    <div class="nav2">
      <a href="#" class="mask" id='locateMe' style="color: #fff;"><img src='/imgs/Ic_my_location_48px_white.png' width='50%' /></a>
    </div>
    <div class="nav">
      <a href="#toggle" class="mask" style="color: #fff;" onclick="openModalReport('default')"><i class="ion-ios-plus-empty"></i></a>
    </div>
  </div>
</div>


<script>

  var heatmap,map;

  var mapType='normal';
  function toggleHeatmap() {
    event.preventDefault();
    // heatmap.setMap(heatmap.getMap() ? null : map);
    if(mapType=='normal'){
      mapType='heat';
      initMapAll(userLatLng,0,'heat');
      $('#toggleHeatmapButton').html('<i class="fas fa-map-marker-alt"></i>');
    }else{
      mapType='normal';
      initMapAll(userLatLng,0,'normal');
      $('#toggleHeatmapButton').html('<i class="fas fa-fire-alt"></i>');
    }
  }

  function changeGradient() {
    var gradient = [
      'rgba(0, 255, 255, 0)',
      'rgba(0, 255, 255, 1)',
      'rgba(0, 191, 255, 1)',
      'rgba(0, 127, 255, 1)',
      'rgba(0, 63, 255, 1)',
      'rgba(0, 0, 255, 1)',
      'rgba(0, 0, 223, 1)',
      'rgba(0, 0, 191, 1)',
      'rgba(0, 0, 159, 1)',
      'rgba(0, 0, 127, 1)',
      'rgba(63, 0, 91, 1)',
      'rgba(127, 0, 63, 1)',
      'rgba(191, 0, 31, 1)',
      'rgba(255, 0, 0, 1)'
    ]
    heatmap.set('gradient', heatmap.get('gradient') ? null : gradient);
  }

  function changeRadius() {
    heatmap.set('radius', heatmap.get('radius') ? null : 20);
  }

  function changeOpacity() {
    heatmap.set('opacity', heatmap.get('opacity') ? null : 0.2);
  }


  function capitalize(word) {
    return word
      .toLowerCase()
      .replace(/\w/, firstLetter => firstLetter.toUpperCase());
  }

  var map;
  const iconBase = "/imgs/";
  const icons = {
    1: {
      icon: iconBase + "pinLevel1_sm.png",
    },
    2: {
      icon: iconBase + "pinLevel2_sm.png",
    },
    3: {
      icon: iconBase + "pinLevel3_sm.png",
    },
    4: {
      icon: iconBase + "pinLevel4_sm.png",
    },
    5:{
      icon: iconBase + "pinLevel5_sm.png"
    }
  };

  let darkModeStyle=[];
  function toggleDarkMode(mode){
    if(darkModeStyle.length==0){
      // Custom style at:
      // https://mapstyle.withgoogle.com/
      darkModeStyle=[
        { elementType: "geometry", stylers: [{ color: "#242f3e" }] },
        { elementType: "labels.text.stroke", stylers: [{ color: "#242f3e" }] },
        { elementType: "labels.text.fill", stylers: [{ color: "#746855" }] },
        {
          featureType: "administrative.locality",
          elementType: "labels.text.fill",
          stylers: [{ color: "#d59563" }],
        },
        {
          featureType: "poi",
          elementType: "labels.text.fill",
          stylers: [{ color: "#d59563" }],
        },
        {
          featureType: "poi.park",
          elementType: "geometry",
          stylers: [{ color: "#263c3f" }],
        },
        {
          featureType: "poi.park",
          elementType: "labels.text.fill",
          stylers: [{ color: "#6b9a76" }],
        },
        {
          featureType: "road",
          elementType: "geometry",
          stylers: [{ color: "#38414e" }],
        },
        {
          featureType: "road",
          elementType: "geometry.stroke",
          stylers: [{ color: "#212a37" }],
        },
        {
          featureType: "road",
          elementType: "labels.text.fill",
          stylers: [{ color: "#9ca5b3" }],
        },
        {
          featureType: "road.highway",
          elementType: "geometry",
          stylers: [{ color: "#746855" }],
        },
        {
          featureType: "road.highway",
          elementType: "geometry.stroke",
          stylers: [{ color: "#1f2835" }],
        },
        {
          featureType: "road.highway",
          elementType: "labels.text.fill",
          stylers: [{ color: "#f3d19c" }],
        },
        {
          featureType: "transit",
          elementType: "geometry",
          stylers: [{ color: "#2f3948" }],
        },
        {
          featureType: "transit.station",
          elementType: "labels.text.fill",
          stylers: [{ color: "#d59563" }],
        },
        {
          featureType: "water",
          elementType: "geometry",
          stylers: [{ color: "#17263c" }],
        },
        {
          featureType: "water",
          elementType: "labels.text.fill",
          stylers: [{ color: "#515c6d" }],
        },
        {
          featureType: "water",
          elementType: "labels.text.stroke",
          stylers: [{ color: "#17263c" }],
        },
      ];
      darkModeStyle2=[{"featureType":"all","elementType":"labels.text.fill","stylers":[{"saturation":36},{"color":"#000000"},{"lightness":40}]},{"featureType":"all","elementType":"labels.text.stroke","stylers":[{"visibility":"on"},{"color":"#000000"},{"lightness":16}]},{"featureType":"all","elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"administrative","elementType":"geometry.fill","stylers":[{"color":"#000000"},{"lightness":20}]},{"featureType":"administrative","elementType":"geometry.stroke","stylers":[{"color":"#000000"},{"lightness":17},{"weight":1.2}]},{"featureType":"administrative","elementType":"labels","stylers":[{"visibility":"off"}]},{"featureType":"administrative.country","elementType":"all","stylers":[{"visibility":"simplified"}]},{"featureType":"administrative.country","elementType":"geometry","stylers":[{"visibility":"simplified"}]},{"featureType":"administrative.country","elementType":"labels.text","stylers":[{"visibility":"simplified"}]},{"featureType":"administrative.province","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"administrative.locality","elementType":"all","stylers":[{"visibility":"simplified"},{"saturation":"-100"},{"lightness":"30"}]},{"featureType":"administrative.neighborhood","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"administrative.land_parcel","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"landscape","elementType":"all","stylers":[{"visibility":"simplified"},{"gamma":"0.00"},{"lightness":"74"}]},{"featureType":"landscape","elementType":"geometry","stylers":[{"color":"#000000"},{"lightness":20}]},{"featureType":"landscape.man_made","elementType":"all","stylers":[{"lightness":"3"}]},{"featureType":"poi","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"poi","elementType":"geometry","stylers":[{"color":"#000000"},{"lightness":21}]},{"featureType":"road","elementType":"geometry","stylers":[{"visibility":"simplified"}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"color":"#000000"},{"lightness":17}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"color":"#000000"},{"lightness":29},{"weight":0.2}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"color":"#000000"},{"lightness":18}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"color":"#000000"},{"lightness":16}]},{"featureType":"transit","elementType":"geometry","stylers":[{"color":"#000000"},{"lightness":19}]},{"featureType":"water","elementType":"geometry","stylers":[{"color":"#000000"},{"lightness":17}]}];
      $('p').css('color','white');
      $('label').css('color','white');
      $('h1').css('color','white');
      $('h5').css('color','white');
      $('a').css('color','white');
      $('.sidebar-content').css('background-color','#343434');
      $('.modal-content').css('background-color','#343434');
    }else{
      darkModeStyle=[];
      $('p').css('color','black');
      $('label').css('color','black');
      $('h1').css('color','black');
      $('h5').css('color','black');
      $('a').css('color','black');
      $('.sidebar-content').css('background-color','white');
      $('.modal-content').css('background-color','white');
      $('.ion-ios-plus-empty').css('color','white');
    }
    initMapAll(userLatLng);
  }


  let newHeatData;
  function initMapAll(userLatLng,focusUser=0,mapType='normal') {
    var bounds = new google.maps.LatLngBounds();

    var mapOptions = {
      // center: myCoords,
      zoom: 10,
      disableDefaultUI: true,
      styles:darkModeStyle,
    };
    map = new google.maps.Map(document.getElementById('allMap'), mapOptions);
    heatmapData = getMapData();
    getLocation();
    //USER LOCATION / NEW REPORT
    lat = userLatLng.latitude;
    lng = userLatLng.longitude;

    var myCoords = new google.maps.LatLng(lat, lng);
    if(focusUser==1){
      bounds.extend(myCoords);
    }
    map.fitBounds(bounds);
    // console.log(map.getZoom());
    var infowindow = new google.maps.InfoWindow();


    var usrMarker = new google.maps.Marker({
      position: myCoords,
      map: map,
      draggable: true,
      animation: google.maps.Animation.DROP,
    });


    google.maps.event.addListener(usrMarker, 'click', (function(usrMarker) {
      return function() {
        // infowindow.setContent("Você está aqui!");
        infowindow.setContent("<button class='btn btn-success' onclick='openModalReport()'>Registrar Ocorrência</button>");
        infowindow.open(map, usrMarker);
      }
    })(usrMarker));

    google.maps.event.addListener(map, 'click', (function() {
      return function() {
        infowindow.close();
      }
    })(usrMarker));

    // refresh usrMarker position and recenter map on usrMarker
    function refreshMarker() {
      var lat = document.getElementById('place_latitude').val;
      var lng = document.getElementById('place_longitude').val;
      var myCoords = new google.maps.LatLng(lat, lng);
      usrMarker.setPosition(myCoords);
      map.setCenter(usrMarker.getPosition());
    }

    document.getElementById('place_latitude').onchange = refreshMarker;
    document.getElementById('place_longitude').onchange = refreshMarker;
    // document.getElementById('place_address').onchange = geocodePosition;
    usrMarker.addListener('drag', function() {
      latlng = usrMarker.getPosition();
      newlat = (Math.round(latlng.lat() * 1000000)) / 1000000;
      newlng = (Math.round(latlng.lng() * 1000000)) / 1000000;
      // console.log("NEW:",newlat,newlng);
      $('#place_latitude').val(newlat);
      $('#place_longitude').val(newlng);
      infowindow.setContent("<button class='btn btn-success' onclick='openModalReport()'>Registrar Ocorrência</button>");
      infowindow.open(map, usrMarker);
    });
    // When drag ends, center (pan) the map on the usrMarker position
    usrMarker.addListener('dragend', function() {
      map.panTo(usrMarker.getPosition());
      codeAddress(newlat,newlng);
    });


    latlng = usrMarker.getPosition();
    newlat = (Math.round(latlng.lat() * 1000000)) / 1000000;
    newlng = (Math.round(latlng.lng() * 1000000)) / 1000000;
    $('#place_latitude').val(newlat);
    $('#place_longitude').val(newlng);
    codeAddress(newlat,newlng);

    // let pinsToShow = getSelectedPins();
    // getMapData();
    console.log(pinsToShow);
    // ALL REPORTS PINS
    if(mapType=="normal"){
      // console.log(locations);
      // $(locations).each(function(i,place){
        // console.log(place[2]);
        // console.log(pinsToShow.includes(place[2]));
        // if(pinsToShow.includes(place[2]+"")){
        //
        //   myCoords = new google.maps.LatLng(parseFloat(place[4]),parseFloat(place[5]));
        //   if(focusUser==0){
        //     bounds.extend(myCoords);
        //   }
        //   marker = new google.maps.Marker({
        //     position: myCoords,
        //     // icon: "/imgs/pinAlertSmall.png",
        //     icon: icons[place[2]+""].icon,
        //     map: map,
        //     animation: google.maps.Animation.DROP,
        //
        //   });
        //   google.maps.event.addListener(marker, 'click', (function(marker) {
        //     return function() {
        //       openReviews(place);
        //     }
        //   })(marker));
        // }
      // });
        let labels = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        let markers = heatmapData.flatMap((location, i) => {
          console.log(pinsToShow.includes(location[1].danger_level+""))
            marker =  new google.maps.Marker({
              position: location[0],
              icon: icons[location[1].danger_level].icon,
              // label: labels[i % labels.length],
            });
            google.maps.event.addListener(marker, 'click', function(marker) {
                  openReviews(location[1]);
              });
              return marker;
        });
        new MarkerClusterer(map, markers, {
          imagePath:
            "https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m",
            maxZoom:8
        });
    }else{
      newHeatData=[];
      $(heatmapData).each(function(i){
        newHeatData.push(new google.maps.LatLng(heatmapData[i][0],heatmapData[i][1]));
      });

      heatmap = new google.maps.visualization.HeatmapLayer({
        data: newHeatData,
        // data: getPoints(),
        map: map
      });
      heatmap.set("radius", heatmap.get("radius") ? null : 30);

    }

    if(focusUser==1){
      setTimeout(function(){
        map.setZoom(16);
      },500);
    }else if(focusUser==0){
      setTimeout(function(){
        map.setCenter({"lat":-14.235000,"lng":-51.925300})
        map.setZoom(4);
      },500);
    }



    // map.fitBounds(bounds);

  }


  function codeAddress(lat,lng) {
    var latlng = new google.maps.LatLng(lat, lng);
    geocoder = new google.maps.Geocoder();
    geocoder.geocode({'latLng': latlng }, function (results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          // console.log(results[0]);
          $('#place_address').val(results[0].formatted_address);
        } else {
          console.log(status);
        }
    });
}

  var position;
  var userLatLng;
  var userCity;
  function getLatLngIP(){
     jQuery.get("https://freegeoip.app/json/", function(response) {
        userLatLng={
          "latitude": parseFloat(response.latitude),
          "longitude": parseFloat(response.longitude)
        }
    }, "jsonp");
  }

  function getLocation() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(showPosition);
    } else {
      getLatLngIP()
      // x.innerHTML = "Geolocation is not supported by this browser.";
    }
  }

  function showPosition(position) {
    userLatLng={
      "latitude":position.coords.latitude,
      "longitude":position.coords.longitude
    };
  }


  document.addEventListener("DOMContentLoaded", function(){
      console.log('Carregando sua localizacao..');
      getLatLngIP();
      setTimeout(function(){
        initMapAll(userLatLng,1);
        // getMapData();
      },1000)
  });

  var dialogLogInWarning = document.getElementById("dialogLogInWarning");
  var modalSettings = new bootstrap.Modal($("#modalSettings"), {});
  var modalReport = new bootstrap.Modal($("#modalReport"), {});
  var modalCredits = new bootstrap.Modal($("#modalCredits"), {});
  var modalReviews = new bootstrap.Modal($("#modalReviews"), {});

  // Get the <span> element that closes the modal
  var span = document.getElementsByClassName("close")[0];

  var userLogged=true;

  function openModalReport(tipoOcorrencia){
    event.preventDefault();
    if(userLogged){
      modalReport.show();
      $('#newRecordTitle').html(tipoOcorrencia);
    }else{
      dialogLogInWarning.show();
    }

  }

  function openReviews(details){
    $("#description").html(details.description);
    $("#category").html(details.category);
    $("#danger_level").html(details.danger_level);
    $("#address").html(details.address);
    $("#recordLat").html(details.latitude);
    $("#recordLong").html(details.longitude);
    $("#userName").html(details.first_name+" "+details.last_name);
    modalReviews.show();
    // openModalReview(details);
  }


  $(document).ready(function(){});

  function openModalSettings(){
    // modalSettings.show();
    $(".sidebar").toggleClass("active");
  }

  function openModalCredits(){
    modalCredits.show();
    $(".sidebar").toggleClass("active");
  }


  $('input[name=checkboxPinLevel]').on('change',function(){
    initMapAll(userLatLng,0);
  });

  let selectedPins=[];
  function getSelectedPins(){
    selectedPins=[];
    $('input[name=checkboxPinLevel]:checked').each(function(i){
      selectedPins.push($(this).val());
    });
    return selectedPins;
  }


  $('#locateMe').on('click',function(){
    event.preventDefault();
    initMapAll(userLatLng,1);
  });


  $(".navs-left a").hover(function(){
    if(darkModeStyle.length==0){
      $(this).css("background-color", "#e4e7e6");
    }else{
      $(this).css("background-color", "#1a1b1b");
    }
    $(this).css("cursor", "pointer");
    }, function(){
    $(this).css("background-color", "transparent");
  });


  $(".ion-ios-navicon").on(" click", function(e) {
        e.preventDefault() , $(".sidebar").toggleClass("active"), $(".navs").removeClass("active"), $(".sidebar .sidebar-overlay").removeClass("fadeOut animated").addClass("fadeIn animated")
  }), $(".sidebar .sidebar-overlay").on(" click", function(e) {
        e.preventDefault() , $(".ion-ios-navicon").click(), $(this).removeClass("fadeIn").addClass("fadeOut")
  })
  $(".navs-left a").on("touchstart click", function(e) {
        e.preventDefault();
        // var t = $(this).attr("href").replace("#", "");
        // $(".sidebar").toggleClass("active")
  })


  $('.btn-close').on("click",function(){
    $('.modal').hide();
    $('.modal-backdrop').hide();

  });

  $(document).ready(function() {
    $('.alert-dismissible button').click();
  });


  let intro = introJs();
  function initTutorial(){
    $('.sidebar').removeClass('active');

    intro.setOptions({
      steps: [
        {
          intro: "Bem vindo ao Safety For ALL!"
        },
        {
          element: document.querySelector('#map'),
          intro: "Neste mapa você poderá ver todos as ocorrências reportadas pela nossa crescente comunidade e realizar seus proprios registros!"
        },
        {
          element: document.querySelector('.nav2'),
          intro: "Clique aqui para obter sua localização atual..."
        },
        {
          element: document.querySelector('.nav'),
          intro: "... E aqui para registrar uma nova ocorrencia"
        },
        {
          element: document.querySelector('.ion-ios-navicon'),
          intro: "Neste menu você tem algumas opções para customizar sua experiência"
        },
        {
          element: document.querySelector('.labelDarkToggle'),
          intro: "E aqui você pode alternar entre os temas claro e escuro"
        },
        {
          element: document.querySelector('body'),
          intro: "Safety, for all!  Enjoy. <br /> <img src='/imgs/safety.png' />"
        }
      ]
    }).start();
  }

  intro.onchange(function(element) {
    console.log(element.id)
    if(element.id === 'sidebar') {
      $('.sidebar').addClass('active');
    } else {
      $('.sidebar').removeClass('active');
    }
  });


  function setCookie(cname,cvalue,exdays) {
    const d = new Date();
    d.setTime(d.getTime() + (exdays*24*60*60*1000));
    let expires = "expires=" + d.toGMTString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
  }

  function getCookie(cname) {
    let name = cname + "=";
    let decodedCookie = decodeURIComponent(document.cookie);
    let ca = decodedCookie.split(';');
    for(let i = 0; i < ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) == ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) == 0) {
        return c.substring(name.length, c.length);
      }
    }
    return "";
  }

  function checkCookie() {
    let user = getCookie("tutorialDisplayed");
    if (user != "") {
      console.log("tutorial already shown");
    } else {
      initTutorial();
      setCookie("tutorialDisplayed",1,30);
    }
  }


  $(document).ready(function() {
    checkCookie();
  });

  var AUTH_TOKEN;
  function sendForm(){
    AUTH_TOKEN = $('meta[name=csrf-token]').attr('content');


    data={
      "authenticity_token":AUTH_TOKEN,
      "description":$('#descriptionForm').val(),
      "danger_level":$('[name=danger_level_input]:checked').val(),
      "address":$("#place_address").val(),
      "category":$("#selectCategoria").val(),
      "latitude":$("#place_latitude").val(),
      "longitude":$("#place_longitude").val(),
    }
    $.ajax({
      type: 'post',
      dataType:'json',
      data: data,
      url:'/reports'
    }).done(function( data ) {
      Swal.fire(
        'Sucesso!',
        'A sua ocorrência foi registrada!',
        'success'
      );
      $('.btn-close').click();
      initMapAll(userLatLng,3,"normal")

    });
    return heatmapData
  }

  // var locations;
  var heatmapData;
  function getMapData(){
    pinsToShow = getSelectedPins().join();
    $.ajax({
      type: 'get',
      dataType:'json',
      data: {pinsToShow},
      url:'/getMapData'
    }).done(function( data ) {
      // locations=[];
      heatmapData=[];
      $(data).each(function(i){
        // console.log(data[i]);
        // locations.push([data[i].description,data[i].category,data[i].danger_level,data[i].address,data[i].latitude,data[i].longitude,data[i].user_id,data[i].first_name,data[i].last_name]);
        heatmapData.push([{"lat":data[i].latitude,"lng":data[i].longitude},data[i]]);
      });
      // initMapAll(userLatLng,1,"normal")
      // console.log(data);
    });
    return heatmapData
  }

</script>
